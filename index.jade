doctype html
html
	head
		title Cube Tutorial
		link(href='https://molarmanful.github.io/TerseUI/bootstrap.min.css' rel='stylesheet')
		link(href='style.css' rel='stylesheet')
	body
		nav.navbar.navbar-default.navbar-fixed-top
			.container-fluid
				.navbar-header
					a.navbar-brand A Cube Tutorial
		.loader
			.container
				.progress
					.progress-bar.progress-bar-danger.progress-bar-striped.active(role='progress-bar' aria-valuenow='100' aria-valuemin='0' aria-valuemax='100' style='width:100%') Loading...
		.main.container-fluid
			.row
				.col-sm-12
					ul.nav.nav-tabs
						li.active: a#1(data-toggle='tab' href='#intro') Intro
						li: a#2(data-toggle='tab' href='#cross') 1. Cross
						li: a#3(data-toggle='tab' href='#fl') 2. FL
						li: a#4(data-toggle='tab' href='#sl') 3. SL
						li: a#5(data-toggle='tab' href='#eoll') 4. EOLL
						li: a#6(data-toggle='tab' href='#ocll') 5. OCLL
						li: a#7(data-toggle='tab' href='#cpll') 6. CPLL
						li: a#8(data-toggle='tab' href='#epll') 7. EPLL
					.tab-content
						#intro.tab-pane.fade.in.active
							h1 Intro
							p Welcome to this interactive tutorial on how to solve a Rubik's Cube! The tabs above are for switching steps. The cube on the right is for you to drag around, directly in your browser. It will hide and show different cubelets depending on what step you are at.
							p This tutorial will be teaching the Beginner LBL (Layer-By-Layer) method. Basically, instead of solving sides, this method will build layers to solve the cube. As you get better at solving the cube, however, you should begin looking at more advanced methods.
							h2 Terminology
							h3 Pieces
							.row
								.col-sm-4
									|Centers:
									.ar: iframe(src='q.html?ghighlight=centers')
								.col-sm-4
									|Edges:
									.ar: iframe(src='q.html?ghighlight=edges')
								.col-sm-4
									|Corners:
									.ar: iframe(src='q.html?ghighlight=corners')
							h3 Notation
							p 90-degree clockwise turns:
							ul
								li R = Right
								li L = Left
								li U = Up
								li D = Down
								li F = Front
								li B = Back
								li M = Meridian (Clockwise to L face)
								li E = Equatorial (Clockwise to D face)
								li S = Standing (Clockwise to F face)
								li x = L/R rotation (Clockwise to R face)
								li y = U/D rotation (Clockwise to U face)
								li z = F/B rotation (Clockwise to B face)
							p NOTE: These turns are clockwise when your cube is held with that face at the front.
							p Other symbols:
							ul
								li [MOVE]2 = 180-degree turn (ex.: R2)
								li [MOVE]' = 90-degree counterclockwise turn (ex.: U')
							h3 Piece States
							ul
								li Permuted = Piece is in correct position.
								li Oriented = Piece is flipped correctly.
							p Solved pieces are both permuted and oriented.
						#cross.tab-pane.fade
							h1 Cross
							p The Cross is one of the easiest steps to do â€“ it is entirely possible to learn this step without having to look at the steps below. However, when you finish, each cross piece must be permuted and oriented.
							.row
								.col-sm-6
									|Good Cross:
									.ar: iframe(src='q.html?ghighlight=flcross')
								.col-sm-6
									|Bad Cross:
									.ar: iframe(src='q.html?ghighlight=flcross&gscramble=R2%20U%20F2%20U%27%20R2')
							p How do you do this? Well, it's simple. For each cross piece edge:
							ol
								li Bring the edge into the U face without disturbing any of the other cross pieces.
								li Using U, move the cross piece above its corresponding center.
								li Do one of the algorithms below depending on your case.
							.row
								.col-sm-6
									|F2
									br
									.ar: iframe(src='q.html?ghighlight=flcross&gscramble=F2&galgorithm=F2')
								.col-sm-6
									|U' R' F R
									.ar: iframe(src='q.html?ghighlight=flcross&gscramble=R%27%20F%27%20R%20U&galgorithm=U%27%20R%27%20F%20R')
						#fl.tab-pane.fade
							h1 First Layer (FL)
							p This step solves the corners in the first layer while preserving the cross pieces.
							
							p For each corner:
							ol
								li Bring the corner into the U face using SEXY MOVE.
								li Using U, move the corner above its corresponding 2 centers.
								li Repeat SEXY MOVE until the corner is solved.
							.row
								.col-sm-6
									|SEXY MOVE: R U R' U'
									.ar: iframe(src='q.html?ghighlight=fl&gscramble=U%20R%20U%27%20R%27&galgorithm=R%20U%20R%27%20U%27')
						#sl.tab-pane.fade
							h1 Second Layer (SL)
							p This step solves the edges in the E slice without disturbing the FL.
							ol
								li Bring the edge into the U face using either SL1 or SL2, depending on where the edge is.
								li Using U, move the edge into place so that the sticker that is not on the U face matches with its corresponding center.
								li
									ul
										li If the edge is going into the front-right position, use SL1.
										li If the edge is going into the back-right position, use SL2.
							.row
								.col-sm-6
									|SL1: R' U' R' U' R' U R U R
									.ar: iframe(src='q.html?ghighlight=f2l&gscramble=R%27%20U%27%20R%27%20U%27%20R%20U%20R%20U%20R&galgorithm=R%27%20U%27%20R%27%20U%27%20R%27%20U%20R%20U%20R')
								.col-sm-6
									|SL2: R U R U R U' R' U' R'
									.ar: iframe(src='q.html?ghighlight=f2l&gscramble=R%20U%20R%20U%20R%27%20U%27%20R%27%20U%27%20R%27&galgorithm=R%20U%20R%20U%20R%20U%27%20R%27%20U%27%20R%27')
						#eoll.tab-pane.fade
							h1 Edge Orient Last Layer (EOLL)
							p Ah, now we're onto the most algorithmically intense of the 3 layers: the last layer.
							p This step orients the LL edges while preserving the first 2 layers.
							p An oriented edge in this case means that the edge's U face color is the same as the U center's color.
							ul
								li 4 edges oriented: Go on to OCLL.
								li 2 opposite edges oriented (Bar): Do BAR to orient the remaining 2 edges.
								li 2 adjacent edges oriented (L): Turn the U face until the 2 unoriented edges are at the F and R faces. Do F R U R' U' F' to get to the Bar case.
								li 0 edges oriented (Dot): Do F R U R' U' F' to get to the L case.
							.row
								.col-sm-6
									|BAR: F R U R' U' F'
									.ar: iframe(src='q.html?ghighlight=eoll&gscramble=F%20U%20R%20U%27%20R%27%20F%27&galgorithm=F%20R%20U%20R%27%20U%27%20F%27')
								.col-sm-6
									|L case positioning
									.ar: iframe(src='q.html?ghighlight=eoll&gscramble=F%20R%20U%20R%27%20U%27%20F%27')
						#ocll.tab-pane.fade
							h1 Orient Corners Last Layer (OCLL)
							p This step orients the LL corners while preserving LL edge orientation and the first 2 layers.
							p An oriented corner in this case means that the corner's U face color is the same as the U center's color.
							ul
								li 4 corners oriented: Go on to CPLL.
								li 1 corner oriented: Turn the U face until the oriented corner is at the front-left position. Do SUNE to orient the rest of the corners.
								li 2 corners oriented: Turn the U face until the left front corner's F face color is the same as the U center's color. Then do SUNE to get 1 corner oriented.
								li 0 corners oriented: Turn the U face until the left front corner's L face color is the same as the U center's color. Then do SUNE to get 1 corner oriented.
							.row
								.col-sm-6
									|SUNE: R U R' U R U2 R'
									.ar: iframe(src='q.html?ghighlight=oll&gscramble=R%20U2%20R%27%20U%27%20R%20U%27%20R%27&galgorithm=R%20U%20R%27%20U%20R%20U2%20R%27')
								.col-sm-6
									.row
										.col-sm-4
											|1 oriented
											.ar: iframe(src='q.html?ghighlight=oll&gscramble=R%20U2%20R%27%20U%27%20R%20U%27%20R%27')
											.ar: iframe(src='q.html?ghighlight=oll&gscramble=R%20U%20R%27%20U%20R%20U2%20R%27%20U2')
										.col-sm-4
											|2 oriented
											.ar: iframe(src='q.html?ghighlight=oll&gscramble=R%20U2%20R%27%20U%27%20R%20U%20R%27%20U%27%20R%20U%20R%27%20U%27%20R%20U%27%20R%27%20U2')
											.ar: iframe(src='q.html?ghighlight=oll&gscramble=R%20U%20R%27%20U%27%20R%20U%27%20R%27%20U2%20R%20U%27%20R%27%20U2%20R%20U%20R%27%20U')
											.ar: iframe(src='q.html?ghighlight=oll&gscramble=R%20U2%20R%20D%20R%27%20U2%20R%20D%27%20R2')
										.col-sm-4
											|0 oriented
											.ar: iframe(src='q.html?ghighlight=oll&gscramble=R%20U2%20R%27%20U%27%20R%20U%20R%27%20U%27%20R%20U%27%20R%27')
											.ar: iframe(src='q.html?ghighlight=oll&gscramble=R%20U2%20R2%20U%27%20R2%20U%27%20R2%20U2%20R')
						#cpll.tab-pane.fade
							h1 Corner Permute Last Layer (CPLL)
							p This step solves the LL corners while preserving LL edge orientation and the first 2 layers.
							ul
								li All corners solved: Go on to EPLL.
								li "Headlights" (see HEADLIGHTS setup below for clarification): Use HEADLIGHTS to solve all of the corners.
								li No headlights: Use HEADLIGHTS to get headlights.
							.row
								.col-sm-6
									|HEADLIGHTS: x' R U' R D2 R' U R D2 R2 x
									.ar: iframe(src='q.html?ghighlight=coll&gscramble=X%27%20R2%20D2%20R%27%20U%27%20R%20D2%20R%27%20U%20R%27%20X&galgorithm=X%27%20R%20U%27%20R%20D2%20R%27%20U%20R%20D2%20R2%20X')
						#epll.tab-pane.fade
							h1 Edge Permute Last Layer (EPLL)
							p This step solves the entire cube! Almost there!
							ul
								li All edges solved: GOGOGOGOGOGO!
								li 1 edge solved: Put solved edge at B face using U and do 3CYCLE until all edges are solved.
								li 0 edges solved: Do 3CYCLE to solve 1 edge.
							.row
								.col-sm-6
									|HEADLIGHTS: R U' R U R U R U' R' U' R2
									.ar: iframe(src='q.html?gscramble=R2%20U%20R%20U%20R%27%20U%27%20R%27%20U%27%20R%27%20U%20R%27&galgorithm=R%20U%27%20R%20U%20R%20U%20R%20U%27%20R%27%20U%27%20R2')
						br
						br
						br
		g-cube
			noscript Hey you, this tutorial requires Javascript to actually work. Please enable Javascript if you plan on using this tutorial.
			g-scramble /random
		script(src='https://code.jquery.com/jquery-2.2.4.min.js')
		script(src='https://molarmanful.github.io/gCube/gcube.min.js')
		script(src='https://maxcdn.bootstrapcdn.com/bootstrap/3.3.6/js/bootstrap.min.js')
		script(src='main.js')